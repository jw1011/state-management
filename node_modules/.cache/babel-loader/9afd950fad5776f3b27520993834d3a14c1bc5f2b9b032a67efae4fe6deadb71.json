{"ast":null,"code":"// function ToDoList() {\n//   const [toDo, setTodo] = useState(\"\");\n//   const [toDoError, setToDoError] = useState(\"\");\n//   const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n//     const {\n//       currentTarget: { value },\n//     } = event;\n//     setToDoError(\"\");\n//     setTodo(value);\n//   };\n//   const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n//     event.preventDefault();\n//     if (toDo.length < 10) {\n//       return setToDoError(\"Todo should be longer\");\n//     }\n//     console.log(\"submit\");\n//   };\n//   return (\n//     <div>\n//       <form onSubmit={onSubmit}>\n//         <input onChange={onChange} value={toDo} placeholder=\"Write a to do\" />\n//         <button>Add</button>\n//         {toDoError !== \"\" ? toDoError : null}\n//       </form>\n//     </div>\n//   );\n// }\n\nexport default ToDoList;","map":{"version":3,"names":["ToDoList"],"sources":["/home/jwlee/Documents/nomadCoders/react-masterclass/state-management/state-management/src/ToDoList.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\n// function ToDoList() {\n//   const [toDo, setTodo] = useState(\"\");\n//   const [toDoError, setToDoError] = useState(\"\");\n//   const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n//     const {\n//       currentTarget: { value },\n//     } = event;\n//     setToDoError(\"\");\n//     setTodo(value);\n//   };\n//   const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n//     event.preventDefault();\n//     if (toDo.length < 10) {\n//       return setToDoError(\"Todo should be longer\");\n//     }\n//     console.log(\"submit\");\n//   };\n//   return (\n//     <div>\n//       <form onSubmit={onSubmit}>\n//         <input onChange={onChange} value={toDo} placeholder=\"Write a to do\" />\n//         <button>Add</button>\n//         {toDoError !== \"\" ? toDoError : null}\n//       </form>\n//     </div>\n//   );\n// }\n\nexport default ToDoList;\n"],"mappings":"AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}